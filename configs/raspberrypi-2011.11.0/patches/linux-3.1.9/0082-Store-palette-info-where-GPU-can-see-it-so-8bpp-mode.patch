From 14ad68cf4afc7acf14076f895b539d81cd9f32ab Mon Sep 17 00:00:00 2001
From: popcornmix <popcornmix@gmail.com>
Date: Sun, 1 Jul 2012 12:09:52 +0100
Subject: [PATCH 82/83] Store palette info where GPU can see it, so 8bpp modes can work. Requires updated start.elf to work properly

---
 drivers/video/bcm2708_fb.c |   14 ++++++++++++++
 1 files changed, 14 insertions(+), 0 deletions(-)

diff --git a/drivers/video/bcm2708_fb.c b/drivers/video/bcm2708_fb.c
index 8d67e86..ec01655 100644
--- a/drivers/video/bcm2708_fb.c
+++ b/drivers/video/bcm2708_fb.c
@@ -48,6 +48,7 @@ struct fbinfo_s {
 	u32 xoffset, yoffset;
 	u32 base;
 	u32 screen_size;
+	u16 cmap[256];
 };
 
 struct bcm2708_fb {
@@ -266,18 +267,31 @@ static inline u32 convert_bitfield(int val, struct fb_bitfield *bf)
 	return (val >> (16 - bf->length) & mask) << bf->offset;
 }
 
+
 static int bcm2708_fb_setcolreg(unsigned int regno, unsigned int red,
 				unsigned int green, unsigned int blue,
 				unsigned int transp, struct fb_info *info)
 {
 	struct bcm2708_fb *fb = to_bcm2708(info);
 
+	/*pr_info("BCM2708FB: setcolreg %d:(%02x,%02x,%02x,%02x) %x\n", regno, red, green, blue, transp, fb->fb.fix.visual);*/
 	if (regno < 16)
 		fb->cmap[regno] = convert_bitfield(transp, &fb->fb.var.transp) |
 		    convert_bitfield(blue, &fb->fb.var.blue) |
 		    convert_bitfield(green, &fb->fb.var.green) |
 		    convert_bitfield(red, &fb->fb.var.red);
 
+	if (regno < 256) {
+		/* blue [0:4], green [5:10], red [11:15] */
+		fb->info->cmap[regno] = ((red   >> (16-5)) & 0x1f) << 11 |
+					((green >> (16-6)) & 0x3f) << 5 |
+					((blue  >> (16-5)) & 0x1f) << 0;
+	}
+	/* Hack: we need to tell GPU the palette has changed, but currently bcm2708_fb_set_par takes noticable time when called for every (256) colour */
+        /* So just call it for what looks like the last colour in a list for now. */
+	if (regno == 15 || regno == 255)
+		bcm2708_fb_set_par(info);
+
 	return regno > 255;
 }
 
-- 
1.7.0.4

