From 2b9036e54232a63dcc07a4cf5092de23672fdc59 Mon Sep 17 00:00:00 2001
From: Chris Boot <bootc@bootc.net>
Date: Mon, 14 May 2012 22:08:23 +0100
Subject: [PATCH 58/95] spi-bcm27xx: use roundup_pow_of_two() instead of rolling our own

Signed-off-by: Chris Boot <bootc@bootc.net>
---
 drivers/spi/spi-bcm27xx.c |   16 ++--------------
 1 files changed, 2 insertions(+), 14 deletions(-)

diff --git a/drivers/spi/spi-bcm27xx.c b/drivers/spi/spi-bcm27xx.c
index b8f8b65..2285309 100644
--- a/drivers/spi/spi-bcm27xx.c
+++ b/drivers/spi/spi-bcm27xx.c
@@ -32,6 +32,7 @@
 #include <linux/spi/spi.h>
 #include <linux/interrupt.h>
 #include <linux/delay.h>
+#include <linux/log2.h>
 
 /* SPI register offsets */
 #define SPI_CS			0x00
@@ -111,19 +112,6 @@ static irqreturn_t bcm27xx_spi_interrupt(int irq, void *dev_id)
 	return IRQ_NONE;
 }
 
-/* from http://graphics.stanford.edu/~seander/bithacks.html#RoundUpPowerOf2 */
-static inline int round_up_power_of_2(unsigned int x)
-{
-	x--;
-	x |= x >> 1;
-	x |= x >> 2;
-	x |= x >> 4;
-	x |= x >> 8;
-	x |= x >> 16;
-	x++;
-	return x;
-}
-
 static int bcm27xx_setup_state(struct spi_master *master,
 		struct device *dev, struct bcm27xx_spi_state *state,
 		u32 hz, u8 csel, u8 mode, u8 bpw)
@@ -141,7 +129,7 @@ static int bcm27xx_setup_state(struct spi_master *master,
 		cdiv = DIV_ROUND_UP(bus_hz, hz);
 
 		/* CDIV must be a power of 2, so round up */
-		cdiv = round_up_power_of_2(cdiv);
+		cdiv = roundup_pow_of_two(cdiv);
 
 		if (cdiv > 65536) {
 			dev_dbg(dev,
-- 
1.7.0.4

