From 02705374a3f7aca0d0d6d004c57b508270e70ea0 Mon Sep 17 00:00:00 2001
From: popcornmix <popcornmix@gmail.com>
Date: Wed, 24 Oct 2012 22:00:43 +0100
Subject: [PATCH 163/195] Fix reboot with new restart method of machine driver

---
 arch/arm/mach-bcm2708/bcm2708.c             |   18 +++++++++++++++++-
 arch/arm/mach-bcm2708/include/mach/system.h |   15 ---------------
 2 files changed, 17 insertions(+), 16 deletions(-)

diff --git a/arch/arm/mach-bcm2708/bcm2708.c b/arch/arm/mach-bcm2708/bcm2708.c
index a3fd1e7..838e0f2 100644
--- a/arch/arm/mach-bcm2708/bcm2708.c
+++ b/arch/arm/mach-bcm2708/bcm2708.c
@@ -663,6 +663,21 @@ int __init bcm_register_device(struct platform_device *pdev)
 	return ret;
 }
 
+static void bcm2708_restart(char mode, const char *cmd)
+{
+	uint32_t pm_rstc, pm_wdog;
+	uint32_t timeout = 10;
+
+	/* Setup watchdog for reset */
+	pm_rstc = readl(IO_ADDRESS(PM_RSTC));
+
+	pm_wdog = PM_PASSWORD | (timeout & PM_WDOG_TIME_SET); // watchdog timer = timer clock / 16; need password (31:16) + value (11:0)
+	pm_rstc = PM_PASSWORD | (pm_rstc & PM_RSTC_WRCFG_CLR) | PM_RSTC_WRCFG_FULL_RESET;
+
+	writel(pm_wdog, IO_ADDRESS(PM_WDOG));
+	writel(pm_rstc, IO_ADDRESS(PM_RSTC));
+}
+
 /* We can't really power off, but if we do the normal reset scheme, and indicate to bootcode.bin not to reboot, then most of the chip will be powered off */
 static void bcm2708_power_off(void)
 {
@@ -671,7 +686,7 @@ static void bcm2708_power_off(void)
 	pm_rsts = PM_PASSWORD | (pm_rsts & PM_RSTC_WRCFG_CLR) | PM_RSTS_HADWRH_SET;
 	writel(pm_rsts, IO_ADDRESS(PM_RSTS));
 	/* continue with normal reset mechanism */
-	arch_reset(0, "");
+	bcm2708_restart(0, "");
 }
 
 void __init bcm2708_init(void)
@@ -928,6 +943,7 @@ MACHINE_START(BCM2708, "BCM2708")
 	.init_machine = bcm2708_init,
 	.init_early = bcm2708_init_early,
 	.reserve = board_reserve,
+	.restart	= bcm2708_restart,
 MACHINE_END
 
 module_param(boardrev, uint, 0644);
diff --git a/arch/arm/mach-bcm2708/include/mach/system.h b/arch/arm/mach-bcm2708/include/mach/system.h
index bc9d458..2d0b821 100644
--- a/arch/arm/mach-bcm2708/include/mach/system.h
+++ b/arch/arm/mach-bcm2708/include/mach/system.h
@@ -35,19 +35,4 @@ static inline void arch_idle(void)
 	cpu_do_idle();
 }
 
-static inline void arch_reset(char mode, const char *cmd)
-{
-	uint32_t pm_rstc, pm_wdog;
-	uint32_t timeout = 10;
-
-	/* Setup watchdog for reset */
-	pm_rstc = readl(IO_ADDRESS(PM_RSTC));
-
-	pm_wdog = PM_PASSWORD | (timeout & PM_WDOG_TIME_SET); // watchdog timer = timer clock / 16; need password (31:16) + value (11:0)
-	pm_rstc = PM_PASSWORD | (pm_rstc & PM_RSTC_WRCFG_CLR) | PM_RSTC_WRCFG_FULL_RESET;
-
-	writel(pm_wdog, IO_ADDRESS(PM_WDOG));
-	writel(pm_rstc, IO_ADDRESS(PM_RSTC));
-}
-
 #endif
-- 
1.7.0.4

