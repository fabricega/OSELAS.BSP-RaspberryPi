From e61e18921900183679bd097977ba8c571f2e101a Mon Sep 17 00:00:00 2001
From: Chris Boot <bootc@bootc.net>
Date: Sat, 19 May 2012 13:07:03 +0100
Subject: [PATCH 63/95] spi-bcm2708: Put the pins in the right mode ourselves

I keep forgetting to run the pin mode helper program, resulting in
endless confusion and annoyance. Until pinmux arrives, let's do it
ourselves in this hacky way. It'll do for now.

Signed-off-by: Chris Boot <bootc@bootc.net>
---
 drivers/spi/spi-bcm2708.c |   28 ++++++++++++++++++++++++++++
 1 files changed, 28 insertions(+), 0 deletions(-)

diff --git a/drivers/spi/spi-bcm2708.c b/drivers/spi/spi-bcm2708.c
index 0e92a60..a5ef5af 100644
--- a/drivers/spi/spi-bcm2708.c
+++ b/drivers/spi/spi-bcm2708.c
@@ -88,6 +88,32 @@ struct bcm2708_spi_state {
 	u16 cdiv;
 };
 
+/*
+ * This function sets the ALT mode on the SPI pins so that we can use them with
+ * the SPI hardware.
+ *
+ * FIXME: This is a hack. Use pinmux / pinctrl.
+ */
+static void bcm2708_init_pinmode(void)
+{
+#define INP_GPIO(g) *(gpio+((g)/10)) &= ~(7<<(((g)%10)*3))
+#define SET_GPIO_ALT(g,a) *(gpio+(((g)/10))) |= (((a)<=3?(a)+4:(a)==4?3:2)<<(((g)%10)*3))
+
+	int pin;
+	u32 *gpio = ioremap(0x20200000, SZ_16K);
+
+	/* SPI is on GPIO 7..11 */
+	for (pin = 7; pin <= 11; pin++) {
+		INP_GPIO(pin);		/* set mode to GPIO input first */
+		SET_GPIO_ALT(pin, 0);	/* set mode to ALT 0 */
+	}
+
+	iounmap(gpio);
+
+#undef INP_GPIO
+#undef SET_GPIO_ALT
+}
+
 static inline u32 bcm2708_rd(struct bcm2708_spi *bs, unsigned reg)
 {
 	return readl(bs->base + reg);
@@ -397,6 +423,8 @@ static int __devinit bcm2708_spi_probe(struct platform_device *pdev)
 		return PTR_ERR(clk);
 	}
 
+	bcm2708_init_pinmode();
+
 	master = spi_alloc_master(&pdev->dev, sizeof(*bs));
 	if (!master) {
 		dev_err(&pdev->dev, "spi_alloc_master() failed\n");
-- 
1.7.0.4

