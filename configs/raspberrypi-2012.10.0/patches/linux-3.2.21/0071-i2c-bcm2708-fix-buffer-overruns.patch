From aa09412fe9ce1d243e9df8e287c565a43688cef0 Mon Sep 17 00:00:00 2001
From: Chris Boot <bootc@bootc.net>
Date: Thu, 31 May 2012 12:36:46 +0100
Subject: [PATCH 71/95] i2c-bcm2708: fix buffer overruns

The driver assumed the hardware wouldn't fill the FIFO with more data
than it was told to process. In the same vein it wrote as much data as
it could until the FIFO was full. Now we check the read/write position
against the message length to make sure we don't read/write too much.

Signed-off-by: Chris Boot <bootc@bootc.net>
---
 drivers/i2c/busses/i2c-bcm2708.c |   32 ++++++++++++++++----------------
 1 files changed, 16 insertions(+), 16 deletions(-)

diff --git a/drivers/i2c/busses/i2c-bcm2708.c b/drivers/i2c/busses/i2c-bcm2708.c
index ceae3be..ebc8ad7 100644
--- a/drivers/i2c/busses/i2c-bcm2708.c
+++ b/drivers/i2c/busses/i2c-bcm2708.c
@@ -129,6 +129,18 @@ static inline void bcm2708_bsc_reset(struct bcm2708_i2c *bi)
 	bcm2708_wr(bi, BSC_S, BSC_S_CLKT | BSC_S_ERR | BSC_S_DONE);	
 }
 
+static inline void bcm2708_bsc_fifo_drain(struct bcm2708_i2c *bi)
+{
+	while ((bcm2708_rd(bi, BSC_S) & BSC_S_RXD) && (bi->pos < bi->msg->len))
+		bi->msg->buf[bi->pos++] = bcm2708_rd(bi, BSC_FIFO);
+}
+
+static inline void bcm2708_bsc_fifo_fill(struct bcm2708_i2c *bi)
+{
+	while ((bcm2708_rd(bi, BSC_S) & BSC_S_TXD) && (bi->pos < bi->msg->len))
+		bcm2708_wr(bi, BSC_FIFO, bi->msg->buf[bi->pos++]);
+}
+
 static inline void bcm2708_bsc_setup(struct bcm2708_i2c *bi)
 {
 	unsigned long bus_hz;
@@ -154,7 +166,6 @@ static irqreturn_t bcm2708_i2c_interrupt(int irq, void *dev_id)
 	struct bcm2708_i2c *bi = dev_id;
 	bool handled = false;
 	u32 s;
-	struct i2c_msg *msg = bi->msg;
 
 	spin_lock(&bi->lock);
 
@@ -170,11 +181,8 @@ static irqreturn_t bcm2708_i2c_interrupt(int irq, void *dev_id)
 	} else if (s & BSC_S_DONE) {
 		bi->nmsgs--;
 
-		/* drain the RX FIFO */
-		while (s & BSC_S_RXD) {
-			msg->buf[bi->pos++] = bcm2708_rd(bi, BSC_FIFO);
-			s = bcm2708_rd(bi, BSC_S);
-		};
+		if (bi->msg->flags & I2C_M_RD)
+			bcm2708_bsc_fifo_drain(bi);
 
 		bcm2708_bsc_reset(bi);
 
@@ -188,17 +196,9 @@ static irqreturn_t bcm2708_i2c_interrupt(int irq, void *dev_id)
 			complete(&bi->done);
 		}
 	} else if (s & BSC_S_TXW) {
-		/* fill the TX FIFO */
-		do {
-			bcm2708_wr(bi, BSC_FIFO, msg->buf[bi->pos++]);
-			s = bcm2708_rd(bi, BSC_S);
-		} while (s & BSC_S_TXD);
+		bcm2708_bsc_fifo_fill(bi);
 	} else if (s & BSC_S_RXR) {
-		/* drain the RX FIFO */
-		do {
-			msg->buf[bi->pos++] = bcm2708_rd(bi, BSC_FIFO);
-			s = bcm2708_rd(bi, BSC_S);
-		} while (s & BSC_S_RXD);
+		bcm2708_bsc_fifo_drain(bi);
 	} else {
 		handled = false;
 	}
-- 
1.7.0.4

