From 5f28157c5eafa0aaec10efadaa22965a5a59bec6 Mon Sep 17 00:00:00 2001
From: popcornmix <popcornmix@gmail.com>
Date: Mon, 24 Sep 2012 23:40:21 +0100
Subject: [PATCH 150/205] Use system timer for udelay, so unaffected by cpufreq

---
 arch/arm/mach-bcm2708/bcm2708.c |   30 ++++++++++++++++++++++++++++++
 1 files changed, 30 insertions(+), 0 deletions(-)

diff --git a/arch/arm/mach-bcm2708/bcm2708.c b/arch/arm/mach-bcm2708/bcm2708.c
index 72dcf31..c9d6bd1 100644
--- a/arch/arm/mach-bcm2708/bcm2708.c
+++ b/arch/arm/mach-bcm2708/bcm2708.c
@@ -859,6 +859,36 @@ static inline void bcm2708_init_led(void)
 }
 #endif
 
+
+/* The assembly versions in delay.S don't account for core freq changing in cpufreq driver */
+/* Use 1MHz system timer for busy waiting */
+void __udelay(unsigned long usecs)
+{
+	unsigned long start = readl(__io_address(ST_BASE + 0x04));
+	unsigned long now;
+	do {
+		now = readl(__io_address(ST_BASE + 0x04));
+	} while ((long)(now - start) <= usecs);
+}
+
+
+void __const_udelay(unsigned long scaled_usecs)
+{
+	/* want /107374, this is about 3% bigger. We know usecs is less than 2000, so shouldn't overflow */
+	const unsigned long usecs = scaled_usecs * 10 >> 20;
+	unsigned long start = readl(__io_address(ST_BASE + 0x04));
+	unsigned long now;
+	do {
+		now = readl(__io_address(ST_BASE + 0x04));
+	} while ((long)(now - start) <= usecs);
+}
+
+void __delay(int loops)
+{
+	while (--loops > 0)
+		nop();
+}
+
 MACHINE_START(BCM2708, "BCM2708")
     /* Maintainer: Broadcom Europe Ltd. */
     .map_io = bcm2708_map_io,.init_irq = bcm2708_init_irq,.timer =
-- 
1.7.0.4

